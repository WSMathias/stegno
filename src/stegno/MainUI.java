package stegno;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.JFrame;
import java.io.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author samuel
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG_Secret_Text = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        tp_reciever = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tx_tf_ip_image = new javax.swing.JTextField();
        tx_tf_op_image = new javax.swing.JTextField();
        tx_btn_ip_image = new javax.swing.JButton();
        tx_btn_op_image = new javax.swing.JButton();
        tx_btn_secret_text = new javax.swing.JButton();
        tx_btn_submit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tx_ta_secret_text = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        rx_tf_ip_image = new javax.swing.JTextField();
        rx_btn_ip_image1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        rx_tf_secret_key = new javax.swing.JTextField();
        rx_btn_secret_key = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        rx_btn_submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        rx_ta_secret_text = new javax.swing.JTextPane();
        rx_tf_secret_text = new javax.swing.JTextField();
        rx_btn_secret_text = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Input Image");

        jLabel2.setText("Output Image");

        jLabel3.setText("Secret Text");

        tx_tf_ip_image.setEditable(false);
        tx_tf_ip_image.setEnabled(false);
        tx_tf_ip_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_tf_ip_imageActionPerformed(evt);
            }
        });

        tx_tf_op_image.setEnabled(false);

        tx_btn_ip_image.setText("...");
        tx_btn_ip_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_btn_ip_imageActionPerformed(evt);
            }
        });

        tx_btn_op_image.setText("...");
        tx_btn_op_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_btn_op_imageActionPerformed(evt);
            }
        });

        tx_btn_secret_text.setText("From text file");
        tx_btn_secret_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_btn_secret_textActionPerformed(evt);
            }
        });

        tx_btn_submit.setText("Encode");
        tx_btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_btn_submitActionPerformed(evt);
            }
        });

        tx_ta_secret_text.setColumns(20);
        tx_ta_secret_text.setRows(5);
        tx_ta_secret_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tx_ta_secret_textKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tx_ta_secret_text);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(46, 46, 46)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tx_tf_op_image, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                            .addComponent(tx_tf_ip_image))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tx_btn_ip_image)
                                            .addComponent(tx_btn_op_image)))
                                    .addComponent(tx_btn_secret_text)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(252, 252, 252)
                        .addComponent(tx_btn_submit)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tx_tf_ip_image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tx_btn_ip_image))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tx_tf_op_image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tx_btn_op_image))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tx_btn_secret_text))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tx_btn_submit)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        tp_reciever.addTab("Sender", jPanel1);

        jLabel4.setText("Input Image");

        rx_tf_ip_image.setEnabled(false);
        rx_tf_ip_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rx_tf_ip_imageActionPerformed(evt);
            }
        });

        rx_btn_ip_image1.setText("...");
        rx_btn_ip_image1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rx_btn_ip_image1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Secret Key");

        rx_tf_secret_key.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rx_tf_secret_keyKeyReleased(evt);
            }
        });

        rx_btn_secret_key.setText("...");
        rx_btn_secret_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rx_btn_secret_keyActionPerformed(evt);
            }
        });

        jLabel6.setText("Secret Text File");

        rx_btn_submit.setText("Decode");
        rx_btn_submit.setEnabled(false);
        rx_btn_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rx_btn_submitActionPerformed(evt);
            }
        });

        rx_ta_secret_text.setEditable(false);
        rx_ta_secret_text.setText("** Secret Text from secret text file will be displyed here after decoding the image **");
        jScrollPane1.setViewportView(rx_ta_secret_text);

        rx_tf_secret_text.setEnabled(false);
        rx_tf_secret_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rx_tf_secret_textActionPerformed(evt);
            }
        });

        rx_btn_secret_text.setText("...");
        rx_btn_secret_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rx_btn_secret_textActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(49, 49, 49))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(21, 21, 21)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(rx_tf_secret_text, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                                    .addComponent(rx_tf_secret_key, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rx_tf_ip_image, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rx_btn_ip_image1)
                                    .addComponent(rx_btn_secret_key)
                                    .addComponent(rx_btn_secret_text)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(rx_btn_submit)))
                .addGap(0, 54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(rx_tf_ip_image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rx_btn_ip_image1))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rx_tf_secret_key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rx_btn_secret_key))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rx_tf_secret_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rx_btn_secret_text)))
                .addGap(18, 18, 18)
                .addComponent(rx_btn_submit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                .addContainerGap())
        );

        tp_reciever.addTab("Reciever", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tp_reciever, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tp_reciever, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private String fileSelector(String type,String extenstion,String dir){
        JFileChooser fileChooser = new JFileChooser();
        String filterDesc = extenstion.split(",")[0];
        String filterExt = extenstion.split(",")[1];
        // set file filter if selecting or saving file
        if(type.equals(FileChooseType.SAVE_FILE) || type.equals(FileChooseType.SELECT_FILE)){
            FileNameExtensionFilter filter = new FileNameExtensionFilter(filterDesc, filterExt);
//            fileChooser.addChoosableFileFilter(filter);
            fileChooser.setFileFilter(filter);

        }
        if(type.equals(FileChooseType.SAVE_FILE)){
            JFrame parentFrame = new JFrame();
            fileChooser.setDialogTitle("Specify a file to save");   

            int userSelection = fileChooser.showSaveDialog(parentFrame);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                File fileToSave = fileChooser.getSelectedFile();
                System.out.println("Save as file: " + fileToSave.getAbsolutePath());
                fileChooser.cancelSelection();
                return fileToSave.getAbsolutePath();
            }
        }
        
        if(dir!=null){
            fileChooser = new JFileChooser(dir);
        }

        //For Directory
        if(type.equals(FileChooseType.SELECT_DIR)){
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }
        // For File
        if(type.equals(FileChooseType.SELECT_FILE)){
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        }
        fileChooser.setAcceptAllFileFilterUsed(false);

        int rVal = fileChooser.showOpenDialog(null);
        if (rVal == JFileChooser.APPROVE_OPTION) {
            
            System.out.println(fileChooser.getSelectedFile().toString());
            return fileChooser.getSelectedFile().toString();
        }
        return null;
    }
    private String readWriteFile(String file,String mode) {
        // The name of the file to open.
        String fileName = file;

        // This will reference one line at a time
        String line = null;
        // strore full text to filedata to return
        String fileData = "";

        try {
            // FileReader reads text files in the default encoding.
            FileReader fileReader = 
                new FileReader(fileName);

            // Always wrap FileReader in BufferedReader.
            BufferedReader bufferedReader = 
                new BufferedReader(fileReader);

            while((line = bufferedReader.readLine()) != null) {
                System.out.println(line);
                fileData += line+"\n";
            }   

            // Always close files.
            bufferedReader.close();         
        }
        catch(FileNotFoundException ex) {
            System.out.println(
                "Unable to open file '" + 
                fileName + "'");                
        }
        catch(IOException ex) {
            System.out.println(
                "Error reading file '" 
                + fileName + "'");                  
            // Or we could just do this: 
            // ex.printStackTrace();
        }
        return fileData;
    }
    private void readyToEncode(){
        boolean ipImage = tx_tf_ip_image.getText().length() > 0;
        boolean opImage = tx_tf_op_image.getText().length() > 0;
        boolean st = tx_ta_secret_text.getText().length() > 0;
        tx_btn_submit.setEnabled(st && ipImage && opImage);
    }
    private void readyToDecode(){
        boolean ipImage = rx_tf_ip_image.getText().length() > 0;
        boolean sk = rx_tf_secret_key.getText().length() > 0;
        boolean sc = rx_tf_secret_text.getText().length() > 0;
        rx_btn_submit.setEnabled(sc && sk && ipImage);
    }
    private void rx_tf_ip_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rx_tf_ip_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rx_tf_ip_imageActionPerformed

    private void rx_btn_ip_image1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rx_btn_ip_image1ActionPerformed
        // TODO add your handling code here:
        String text=fileSelector(FileChooseType.SELECT_FILE,FileChooseType.FILTER_IMG,null);
        try{
        if(!text.isEmpty()){
            rx_tf_ip_image.setText(text);
        }
        }
        catch (NullPointerException ex){
            //Prompt.error("image Source not defined");
        }
        readyToDecode();
    }//GEN-LAST:event_rx_btn_ip_image1ActionPerformed

    private void rx_btn_secret_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rx_btn_secret_keyActionPerformed
        // TODO add your handling code here:
        String text=fileSelector(FileChooseType.SELECT_FILE,FileChooseType.FILTER_TXT,null);
        try{
        if(!text.isEmpty()){
            String data = readWriteFile(text,FileMode.READ);
            rx_tf_secret_key.setText(data.trim());
        }
        }
        catch (NullPointerException ex){
            //Prompt.error("image Source not defined");
        }
        readyToDecode();
    }//GEN-LAST:event_rx_btn_secret_keyActionPerformed

    private void rx_btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rx_btn_submitActionPerformed
        // TODO add your handling code here:
        ShellScript Sc = new ShellScript();
        String input_image = rx_tf_ip_image.getText();
        String secret_key = rx_tf_secret_key.getText();
        String secret_text = rx_tf_secret_text.getText();
        try{
            tx_ta_secret_text.setText(Sc.runCmd("python test.py", 0)[0]);
        }
        catch (ArrayIndexOutOfBoundsException ex){
            System.out.println("Invalid file path");
            //Prompt.error("image Source not defined");
        }
    }//GEN-LAST:event_rx_btn_submitActionPerformed

    private void tx_btn_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_btn_submitActionPerformed
        // TODO add your handling code here:
        ShellScript Sc = new ShellScript();
        String input_image = tx_tf_ip_image.getText();
        String output_image = tx_tf_op_image.getText();
        String secret_text = tx_ta_secret_text.getText();
        try{
            tx_ta_secret_text.setText(Sc.runCmd("python test.py", 0)[0]);
        }
        catch (ArrayIndexOutOfBoundsException ex){
            System.out.println("Invalid file path");
            //Prompt.error("image Source not defined");
        }
    }//GEN-LAST:event_tx_btn_submitActionPerformed

    private void tx_btn_secret_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_btn_secret_textActionPerformed
        // TODO add your handling code here:
        String text=fileSelector(FileChooseType.SELECT_FILE,FileChooseType.FILTER_TXT,null);
        try{
        if(!text.isEmpty()){
            String data = readWriteFile(text,FileMode.READ);
            tx_ta_secret_text.setText(data);
        }
        }
        catch (NullPointerException ex){
            //Prompt.error("image Source not defined");
        }
        readyToEncode();
    }//GEN-LAST:event_tx_btn_secret_textActionPerformed

    private void tx_btn_op_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_btn_op_imageActionPerformed
        // TODO add your handling code here:
        String text=fileSelector(FileChooseType.SAVE_FILE,FileChooseType.FILTER_IMG,null);
        try{
        if(!text.isEmpty()){
            if(!text.endsWith(".jpg"))
                text += ".jpg";
            tx_tf_op_image.setText(text);
        }
        }
        catch (NullPointerException ex){
            //Prompt.error("image Source not defined");
        }
        readyToEncode();
    }//GEN-LAST:event_tx_btn_op_imageActionPerformed

    private void tx_btn_ip_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_btn_ip_imageActionPerformed
        // TODO add your handling code here:
        String text=fileSelector(FileChooseType.SELECT_FILE,FileChooseType.FILTER_IMG,null);
        try{
        if(!text.isEmpty()){
            tx_tf_ip_image.setText(text);
        }
        }
        catch (NullPointerException ex){
            //Prompt.error("image Source not defined");
        }
        readyToEncode();
    }//GEN-LAST:event_tx_btn_ip_imageActionPerformed

    private void tx_tf_ip_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_tf_ip_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_tf_ip_imageActionPerformed

    private void tx_ta_secret_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_ta_secret_textKeyReleased
        // TODO add your handling code here:
        readyToEncode();
    }//GEN-LAST:event_tx_ta_secret_textKeyReleased

    private void rx_btn_secret_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rx_btn_secret_textActionPerformed
        // TODO add your handling code here:
        String text=fileSelector(FileChooseType.SAVE_FILE,FileChooseType.FILTER_TXT,null);
        try{
        if(!text.isEmpty()){
            if(!text.endsWith(".txt"))
                text += ".txt";
            rx_tf_secret_text.setText(text);
        }
        }
        catch (NullPointerException ex){
            //Prompt.error("image Source not defined");
        }
        readyToDecode();
    }//GEN-LAST:event_rx_btn_secret_textActionPerformed

    private void rx_tf_secret_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rx_tf_secret_textActionPerformed
        // TODO add your handling code here:
        readyToDecode();
    }//GEN-LAST:event_rx_tf_secret_textActionPerformed

    private void rx_tf_secret_keyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rx_tf_secret_keyKeyReleased
        // TODO add your handling code here:
        readyToDecode();
    }//GEN-LAST:event_rx_tf_secret_keyKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BG_Secret_Text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton rx_btn_ip_image1;
    private javax.swing.JButton rx_btn_secret_key;
    private javax.swing.JButton rx_btn_secret_text;
    private javax.swing.JButton rx_btn_submit;
    private javax.swing.JTextPane rx_ta_secret_text;
    private javax.swing.JTextField rx_tf_ip_image;
    private javax.swing.JTextField rx_tf_secret_key;
    private javax.swing.JTextField rx_tf_secret_text;
    private javax.swing.JTabbedPane tp_reciever;
    private javax.swing.JButton tx_btn_ip_image;
    private javax.swing.JButton tx_btn_op_image;
    private javax.swing.JButton tx_btn_secret_text;
    private javax.swing.JButton tx_btn_submit;
    private javax.swing.JTextArea tx_ta_secret_text;
    private javax.swing.JTextField tx_tf_ip_image;
    private javax.swing.JTextField tx_tf_op_image;
    // End of variables declaration//GEN-END:variables
}
